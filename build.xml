<project name="TowerDefance" default="main">
 
	<property file="build.properties" />
	
	<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar"/> 
	
	<target name="main" depends="launch"/>
	
	<target name="clean">
		<delete dir="${DEPLOY_DIR}" />
		<mkdir dir="${DEPLOY_DIR}" />		
	</target>
	
	<target name="copy" description="Copies dependencies">
		<!-- <copy todir="${DEPLOY_DIR}">  <fileset dir="${ASSETS}"/> </copy> -->
		<copy file="${SRC_DIR}/${DESCRIPTOR}" tofile="${DEPLOY_DIR}/${DESCRIPTOR}"/>
		<replaceregexp file="${DEPLOY_DIR}/${DESCRIPTOR}"
		               byline="true"
		               match="((?&lt;=content&gt;)[\S\s]*?(?=\&lt;\/content))"
		               replace="${APP_SWF_NAME}.swf"/>
	</target>
	
	<target name="compile">
		<mxmlc 
			file="${SRC_DIR}/${APP_MAIN_CLASS}" 
			output="${DEPLOY_DIR}/${APP_SWF_NAME}.swf" 
			configname="air" 
			failonerror="true" 
			debug="${DEBUG}">
			
			<load-config filename="${FLEX_HOME}/frameworks/air-config.xml"/>
			<library-path dir="${FLEX_HOME}/frameworks/libs" includes="*.swc" append="true" />
            <library-path dir="${FLEX_HOME}/frameworks/libs/air" includes="*.swc" append="true" />
			<library-path file="${FLEX_HOME}/frameworks/locale/en_US" append="true"/>
			<library-path dir="${LIBS_DIR}" includes="*.swc" append="true"/>
			<source-path path-element="${ASSETS}"/>
			<external-library-path dir="${ANES_DIR}" includes="*.swc" append="true"/>
			<define name="CONFIG::map_dev" value="true"/>
			<define name="CONFIG::debug" value="${DEBUG}"/>
		</mxmlc>
	</target>
	
	<target name="pack-andr" depends="clean, copy, compile">
		<condition property="adt.name" value="adt">
			<os family="unix" />
		</condition>
		<condition property="adt.name" value="adt.bat">
			<os family="windows" />
		</condition>

		<exec executable="${ADT_PATH}/${adt.name}" failonerror="true" >
			<arg line="-package"/>
			<arg line="-target apk"/>
			<arg line="-storetype pkcs12" />
			<arg line="-keystore ${basedir}/${CERT}" />
			<arg line="-storepass fdbr12345" />
			<arg line="${DEPLOY_DIR}/${APP_SWF_NAME}.apk" />
			<arg line="${DEPLOY_DIR}/${DESCRIPTOR}" />
			<arg line="-C ${DEPLOY_DIR} ${APP_SWF_NAME}.swf" />
			<arg line="-C ${ASSETS} GUI" />
			<arg line="-C ${ASSETS} mapIcons" />
			<arg line="-C ${ASSETS} maps" />
			<arg line="-extdir ${LIBS_DIR}" />
		</exec>
	</target>
	
	<target name="launch" description="Launches app in ADL" depends="clean, copy, compile">
		<exec executable="${ADL}" failonerror="true" >
			<arg line="-profile mobileDevice"/>
			<arg line="-screensize NexusOne"/>
			<arg line="-extdir ${ANES_DIR}"/>
			<arg line="${DEPLOY_DIR}/${DESCRIPTOR}"/>
			<arg line="${DEPLOY_DIR}"/>
		</exec>
	</target>
</project>

<!--альтернатива запуска компиллера-->
<!--
<property name="mxmlc.jar" value="${AIRSDK_HOME}/lib/mxmlc-cli.jar"/>
<property name="argline_compileBuildType" 
         value="-debug=${DEBUG} -optimize=${OPTIMIZE}"/>
<property name="argline_compileConfig" 
         value="+flexlib='${AIRSDK_HOME}/frameworks'"/>
<property name="argline_compileFiles" 
         value="-output=${OUTPUT_FOLDER}/${OUTPUT_FILE_NAME}.${OUTPUT_FILE_EXT} ${SRC_DIR}/${INPUT_FILE_NAME}"/>
<property name="argline_compileLibPath" 
         value="-library-path+=${AIRSDK_HOME}/asc-support.swc -library-path+=${AIR_LIB}/aircore.swc "/>
         
<echo message="Executing: ${argline_compileBuildType} ${argline_compileConfig} ${argline_compileFiles} ${argline_compileLibPath}"/> 
<java jar="${mxmlc.jar}" fork="true" failonerror="true">
        <arg line="${argline_compileBuildType}"/>
        <arg line="${argline_compileConfig}"/>
        <arg line="${argline_compileFiles}"/>
        <arg line="${argline_compileLibPath}"/>
 </java> -->

<!--	<target name="build" depends="set build type, copy extension packages, copy files for building">
	        <exec executable="${MXMLC}" failonerror="true">
	           	<arg line="
	            	${compiler.arguments}
	               	+configname=airmobile
	               	-debug=${build.debug}
	               	-output ${app.builddir}/${app.name}.swf
	               	${app.main.file} 
	               	-source-path+=${app.sourcedir}
	               	-external-library-path+=${ext.extensiondir}/${ext.file}
	               	-library-path+=${app.libs}
	                -incremental=true
	            	"/>
	        </exec>
	</target> -->
<!--
<property name="MXMLC" value="/Applications/Adobe Flash Builder 4.6/sdks/4.6.0/bin/mxmlc"/>
<property name="app.name" value="AirMobileApp"/>
<property name="app.srcdir" value="../src"/>
<property name="app.builddir" value="../bin-debug"/>
<property name="app.libdir" value="../libs"/>
 
<target name="build">
    <exec executable="${MXMLC}">
        <arg line="
            +configname=airmobile
            -output ../${app.builddir}/${app.name}.swf
            ${app.name}.mxml
            -source-path+=${app.sourcedir}
            -external-library-path+=${app.libdir}
        "/>
    </exec>
</target> -->

<!--
<target name="execute.air">
    <condition property="adt.name" value="adt">
        <os family="unix" />
    </condition>

    <condition property="adt.name" value="adt.bat">
        <os family="windows" />
    </condition>

    <exec executable="${FLEX_HOME}/bin/${adt.name}" failonerror="true">
        <arg line="-package" />
        <arg line="-tsa none" />
        <arg line="-storetype pkcs12" />
        <arg line="-keystore ${basedir}/keys/${APP_NAME}.p12" />
        <arg line="-storepass password" />
        <arg line="${DEPLOY_DIR}/${APP_NAME}.air" />
        <arg line="${SRC_DIR}/${APP_NAME}-app.xml" />
        <arg line="-C ${DEPLOY_DIR} ${APP_NAME}.swf" />
    </exec>

</target>
-->

<!--
<target name="package-release" description="Packages up you Air application for release as an apk">
	<exec executable="${air.adt}" failonerror="true">
		<arg line="-package"/>
		<arg line="-target apk"/>
		<arg line="-storetype ${air.storetype}"/>
		<arg line="-keystore ${deploy.dir}/${air.keystore}"/>
		<arg line="-storepass ${air.storepass}"/>
		<arg line="${air.name}"/>
		<arg line="${deploy.dir}/${app.descriptor}"/>
		<arg line="${android.sdk}"/>
		<arg line="${deploy.dir}/${app.name}.swf"/>
		<arg line="-C ${deploy.dir} ${app.name}.swf" />
	</exec>
</target>
-->

				<!-- Create Cert -->
<!--
<target name="create_certificate" description="Creates a pk12 certificte">
	<exec executable="${air.adt}" failonerror="true">
		<arg line="-certificate"/>
		<arg line="-cn self_signed"/>
		<arg line="2048-RSA"/>
		<arg line="${project.root}/CodeCert.pfx"/>
		<arg line="${air.storepass}"/>
	</exec>
</target>
-->
<!-- Install on device -->
<!--
	<target name="install" description="Installs the last created .apk file on your attached device">
		<exec executable="${android.adb}">
			<arg line="-d install"/>
			<arg line="-r ${air.name}"/>
		</exec>
	</target>
	-->
	<!-- Uninstall from device -->
	<!--
	<target name="uninstall" description="Uninstalls the application from the device">
		<exec executable="${air.adt}">
			<arg line="-uninstallApp"/>
			<arg line="-platform ${air.platform}"/>
			<arg line="-platformsdk ${android.sdk}"/>
			<arg line="-appid ${app.id}"/>
		</exec>
	</target> -->
	<!-- Launch on device -->
	<!--
	<target name="launch" description="Launches the app on your device">
		<exec executable="${air.adt}">
			<arg line="-launchApp"/>
			<arg line="-platform ${air.platform}"/>
			<arg line="-platformsdk ${android.sdk}"/>
			<arg line="-appid ${app.id}"/>
		</exec>
	</target>
-->